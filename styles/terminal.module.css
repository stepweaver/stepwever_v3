.container {
  background-color: var(--color-terminal-dark);
  border-radius: 6px;
  overflow: hidden;
  box-shadow: 0 15px 30px -5px rgba(0, 0, 0, 0.6),
    0 10px 10px -5px rgba(0, 0, 0, 0.5), 0 0 10px rgba(0, 255, 65, 0.3),
    0 0 1px rgba(0, 255, 65, 0.7), 0 0 20px rgba(0, 255, 65, 0.3);
  border: 1px solid rgba(0, 255, 65, 0.15);
  position: relative;
  overflow: hidden;
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: var(--color-terminal-light);
  padding: 4px 12px;
  border-bottom: 1px solid var(--color-terminal-border);
}

.button {
  width: 12px;
  height: 12px;
  border-radius: 50%;
  cursor: pointer;
}

.innerGlow {
  box-shadow: inset 0 0 80px rgba(0, 255, 65, 0.08);
}

/* Terminal Window */
.bgTerminalWindow {
  background-color: var(--color-terminal-dark);
}

.bgTerminalHeader {
  background-color: var(--color-terminal-light);
}

.terminalTitleShadow {
  text-shadow: var(--terminal-title-glow);
}

.terminalWindowShadow {
  box-shadow: 0 15px 30px -5px rgba(0, 0, 0, 0.6),
    0 10px 10px -5px rgba(0, 0, 0, 0.5), 0 0 10px rgba(0, 255, 65, 0.3),
    var(--terminal-shadow), var(--crt-glow);
  position: relative;
  overflow: hidden;
}

.terminalInnerGlow {
  box-shadow: var(--terminal-inner-glow);
}

/* CRT effects */
.crtEffect {
  position: relative;
}

.crtTerminal::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    to bottom,
    rgba(0, 0, 0, 0.02) 50%,
    rgba(0, 0, 0, 0) 50%
  );
  background-size: 100% 4px;
  pointer-events: none;
  z-index: 2;
}

.crtText {
  text-shadow: var(--terminal-text-glow);
}

.cursorGlow {
  box-shadow: var(--terminal-strong-glow);
}

/* Hide scrollbar but keep functionality */
.scrollbarHide {
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */
}

.scrollbarHide::-webkit-scrollbar {
  display: none; /* Chrome, Safari and Opera */
}

/* Scanline effect for retro terminal feel */
.scanlinePattern {
  background-image: linear-gradient(
    to bottom,
    transparent,
    transparent 50%,
    rgba(0, 0, 0, 0.02) 50%,
    rgba(0, 0, 0, 0.02)
  );
  background-size: 100% 4px;
  animation: scanlines 1s steps(30) infinite;
  will-change: background-position;
}

/* Terminal tag styles */
.terminalTag {
  color: var(--color-terminal-yellow);
  font-weight: 600;
}

/* Rounded terminal bottom */
.roundedTerminalBottom {
  border-radius: 0 0 0.375rem 0.375rem;
}

/* Terminal color utility classes */
.textTerminalYellow {
  color: var(--color-terminal-yellow);
}

.textTerminalRed {
  color: var(--color-terminal-red);
}

.textTerminalBlue {
  color: var(--color-terminal-blue);
}

.textTerminalCyan {
  color: var(--color-terminal-cyan);
}

.textTerminalDimmed {
  color: var(--color-terminal-dimmed);
}

.borderTerminalBorder {
  border-color: var(--color-terminal-border);
}

.borderTerminalGreen {
  border-color: var(--color-terminal-green);
}

.borderTerminalRed {
  border-color: var(--color-terminal-red);
}

.bgTerminalLight {
  background-color: var(--color-terminal-light);
}

.textGlitch {
  text-shadow: 0 0 5px rgba(0, 255, 65, 0.7);
  position: relative;
}

.scanlineEffect {
  position: relative;
  display: inline-block;
}

.scanlineEffect::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    to bottom,
    transparent 0%,
    rgba(32, 128, 32, 0.08) 50%,
    transparent 100%
  );
  background-size: 100% 4px;
  animation: scanline 0.15s linear infinite;
}

@keyframes scanline {
  0% {
    background-position: 0 -100%;
  }
  100% {
    background-position: 0 100%;
  }
}

/* Glitch text effect */
.glitch-text {
  position: relative;
  color: #0fa;
  font-weight: bold;
  margin: 15px 0;
  display: inline-block;
}

.glitch-text::before,
.glitch-text::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: #000a;
}

.glitch-text::before {
  left: 2px;
  text-shadow: -1px 0 #ff00ff;
  clip: rect(44px, 450px, 56px, 0);
  animation: glitch-anim 5s infinite linear alternate-reverse;
}

.glitch-text::after {
  left: -2px;
  text-shadow: -1px 0 #00ffff;
  clip: rect(44px, 450px, 56px, 0);
  animation: glitch-anim2 5s infinite linear alternate-reverse;
}

@keyframes glitch-anim {
  0% {
    clip: rect(24px, 9999px, 39px, 0);
  }
  10% {
    clip: rect(56px, 9999px, 77px, 0);
  }
  20% {
    clip: rect(41px, 9999px, 94px, 0);
  }
  30% {
    clip: rect(3px, 9999px, 5px, 0);
  }
  40% {
    clip: rect(4px, 9999px, 63px, 0);
  }
  50% {
    clip: rect(89px, 9999px, 76px, 0);
  }
  60% {
    clip: rect(6px, 9999px, 98px, 0);
  }
  70% {
    clip: rect(72px, 9999px, 37px, 0);
  }
  80% {
    clip: rect(17px, 9999px, 53px, 0);
  }
  90% {
    clip: rect(44px, 9999px, 62px, 0);
  }
  100% {
    clip: rect(63px, 9999px, 17px, 0);
  }
}

@keyframes glitch-anim2 {
  0% {
    clip: rect(92px, 9999px, 14px, 0);
  }
  10% {
    clip: rect(55px, 9999px, 47px, 0);
  }
  20% {
    clip: rect(67px, 9999px, 4px, 0);
  }
  30% {
    clip: rect(64px, 9999px, 78px, 0);
  }
  40% {
    clip: rect(1px, 9999px, 53px, 0);
  }
  50% {
    clip: rect(34px, 9999px, 22px, 0);
  }
  60% {
    clip: rect(9px, 9999px, 62px, 0);
  }
  70% {
    clip: rect(87px, 9999px, 80px, 0);
  }
  80% {
    clip: rect(32px, 9999px, 15px, 0);
  }
  90% {
    clip: rect(94px, 9999px, 6px, 0);
  }
  100% {
    clip: rect(10px, 9999px, 82px, 0);
  }
}

/* For terminal animated typing cursor */
.animate-blink {
  animation: blink 1s step-end infinite;
}

@keyframes blink {
  from,
  to {
    opacity: 1;
  }
  50% {
    opacity: 0;
  }
}

/* Terminal line with wrapping for better readability */
.terminalNoWrap {
  white-space: pre-wrap;
  word-wrap: break-word;
  overflow-wrap: break-word;
  max-width: 100%;
  display: block;
  min-width: 0;
  text-indent: 0;
  padding-left: 0;
  margin-left: 0;
  /* Ensure wrapped lines start from the left margin like a real terminal */
  text-align: left;
}

/* Alternative terminal text style that behaves more like a real terminal */
.terminalText {
  white-space: normal;
  word-wrap: break-word;
  overflow-wrap: break-word;
  max-width: 100%;
  display: block;
  min-width: 0;
  text-indent: 0;
  padding-left: 0;
  margin-left: 0;
  text-align: left;
  /* Remove any automatic indentation */
  text-indent: 0;
  padding-left: 0;
  margin-left: 0;
}

/* Terminal HTML content that wraps like a real terminal */
.terminalHtml {
  white-space: normal;
  word-wrap: break-word;
  overflow-wrap: break-word;
  max-width: 100%;
  display: block;
  min-width: 0;
  text-indent: 0;
  padding-left: 0;
  margin-left: 0;
  text-align: left;
  /* Ensure wrapped lines start from the left margin */
  text-indent: 0;
  padding-left: 0;
  margin-left: 0;
}

/* Custom green terminal ellipsis */
.terminalEllipsis {
  position: relative;
  text-overflow: clip;
}

.terminalEllipsis::after {
  content: '...';
  position: absolute;
  right: 0;
  bottom: 0;
  padding-left: 5px;
  background-color: var(--color-terminal-dark);
  color: var(--color-terminal-green);
}

/* Terminal line with horizontal scrolling for long lines */
.terminalScroll {
  white-space: nowrap;
  overflow-x: auto;
  overflow-y: hidden;
  max-width: 100%;
  display: block;
  min-width: 0;
}

/* Setting ellipsis color using mask technique */
@supports (-webkit-mask-image: none) or (mask-image: none) {
  .terminalNoWrap {
    text-overflow: clip;
    position: relative;
  }

  .terminalNoWrap.overflowing::after {
    content: '...';
    position: absolute;
    right: 0;
    color: var(--color-terminal-green);
    background-color: var(--color-terminal-dark);
    padding-left: 4px;
  }
}
